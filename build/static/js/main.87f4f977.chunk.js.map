{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","baseURL","noteRequests","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","console","log","length","notesToShow","filter","map","noteToToggle","find","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"8LAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,QCK3BK,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,qBAAKJ,UAAU,QAAf,SACGI,KCQQC,EAfA,WAOb,OACE,sBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAIV,UACE,uBACA,4G,gBCRAC,EAAU,aAgCDC,EAFM,CAAEC,OAfR,WAEb,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAACC,GAAD,OAAcA,EAASC,SAadC,OAVhB,SAACC,GAEd,OADgBN,IAAMO,KAAKV,EAASS,GACrBJ,MAAK,SAACC,GAAD,OAAcA,EAASC,SAQNI,OALxB,SAACC,EAAIH,GAElB,OADgBN,IAAMU,IAAN,UAAab,EAAb,YAAwBY,GAAMH,GAC/BJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UC6E9BO,EArGH,SAACC,GAAW,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,OAESF,mBAAS,iBAFlB,mBAEdG,EAFc,KAELC,EAFK,OAGSJ,oBAAS,GAHlB,mBAGdK,EAHc,KAGLC,EAHK,OAImBN,mBAAS,MAJ5B,mBAIdO,EAJc,KAIAC,EAJA,KAMrBC,qBAAU,WAMRC,EACGxB,SACAG,MAAK,SAACsB,GACLT,EAASS,QAEZ,IACHC,QAAQC,IAAI,SAAUZ,EAAMa,OAAQ,SAEpC,IA0BMC,EAAcV,EAAUJ,EAAQA,EAAMe,QAAO,SAAC9C,GAAD,OAAUA,EAAKG,aA4BlE,OACE,gCACE,uCACA,cAAC,EAAD,CAAcK,QAAS6B,IACvB,8BACE,yBAAQ/B,QAAS,kBAAM8B,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGU,EAAYE,KAAI,SAAC/C,GAAD,OACf,cAAC,EAAD,CAEEA,KAAMA,EACNC,iBAAkB,kBAxCD,SAACyB,GAE1B,IAAMsB,EAAejB,EAAMkB,MAAK,SAACjD,GAAD,OAAUA,EAAK0B,KAAOA,KAChDwB,EAAW,2BAAQF,GAAR,IAAsB7C,WAAY6C,EAAa7C,YAOhEqC,EACGf,OAAOC,EAAIwB,GACX/B,MAAK,SAACgC,GACLnB,EAASD,EAAMgB,KAAI,SAAC/C,GAAD,OAAWA,EAAK0B,KAAOA,EAAK1B,EAAOmD,SAEvDC,OAAM,SAACC,GACNf,EAAgB,SAAD,OACJU,EAAa3C,QADT,sCAGfiD,YAAW,WACThB,EAAgB,QACf,QAmByBiB,CAAmBvD,EAAK0B,MAF3C1B,EAAK0B,SAMhB,uBAAM8B,SAxEM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBtD,QAAS4B,EACT2B,MAAM,IAAIC,MAAOC,cACjB3D,UAAW4D,KAAKC,SAAW,IAQ7BxB,EACGlB,OAAOqC,GACPxC,MAAK,SAACgC,GACLnB,EAASD,EAAMkC,OAAOd,IACtBjB,EAAW,QAuDb,UACE,uBAAOgC,MAAOjC,EAASkC,SApDJ,SAACV,GACxBf,QAAQC,IAAIc,EAAMW,OAAOF,OACzBhC,EAAWuB,EAAMW,OAAOF,UAmDpB,wBAAQG,KAAK,SAAb,qBAEF,cAAC,EAAD,Q,MClGNC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.87f4f977.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n\n  return (\n    <li className='note'>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return (\n    <div className='error'>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki, 2021</em>\n    </div>\n  )\n}\n\nexport default Footer","import axios from \"axios\";\n\n// const baseURL = \"http://localhost:3001/api/notes\";\n\nconst baseURL = \"/api/notes\";\n\n/*  GET request to test ERROR handling & errorMessage\nconst getAll = () => {\n  const request = axios.get(baseURL)\n  const nonExisting = {\n    id: 10000,\n    content: 'This note is not saved to server',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true,\n  }\n  return request.then(response => response.data.concat(nonExisting))\n}\n*/\n\nconst getAll = () => {\n  const request = axios.get(baseURL);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseURL, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseURL}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst noteRequests = { getAll, create, update };\n\nexport default noteRequests;\n","import React, { useState, useEffect } from \"react\";\nimport Note from \"./components/Note\";\nimport Notification from \"./components/Notification\";\nimport Footer from \"./components/Footer\";\n// import axios from \"axios\";\nimport noteService from \"./services/notes\";\n\nconst App = (props) => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"a new note...\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    // console.log(\"effect\");\n    // axios.get(\"http://localhost:3001/notes\").then((response) => {\n    //   console.log(\"promise fulfilled\");\n    //   setNotes(response.data);\n    // });\n    noteService\n      .getAll()\n      .then((initialNotes) => {\n        setNotes(initialNotes);\n      });\n  }, []);\n  console.log(\"render\", notes.length, \"notes\");\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    };\n\n    // axios.post(\"http://localhost:3001/notes\", noteObject).then((response) => {\n    //   console.log(response);\n    //   setNotes(notes.concat(response.data));\n    //   setNewNote(\"\");\n    // });\n    noteService\n      .create(noteObject)\n      .then((returnedNote) => {\n        setNotes(notes.concat(returnedNote));\n        setNewNote(\"\");\n      });\n  };\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  const toggleImportanceOf = (id) => {\n    // const url = `http://localhost:3001/notes/${id}`;\n    const noteToToggle = notes.find((note) => note.id === id);\n    const changedNote = { ...noteToToggle, important: !noteToToggle.important };\n\n    // axios\n    //   .put(url, changedNote)\n    //   .then((response) => {\n    //     setNotes(notes.map((note) => note.id !== id ? note : response.data))\n    //   })\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n      })\n      .catch((error) => {\n        setErrorMessage(\n          `Note \"${noteToToggle.content}\" was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        // setNotes(notes.filter((note) => note.id !== id))\n      });\n  };\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}